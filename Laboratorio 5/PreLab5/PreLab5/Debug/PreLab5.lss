
PreLab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000742  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000742  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000742  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a5f  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000081b  00000000  00000000  000012ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000056f  00000000  00000000  00001ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00002038  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000465  00000000  00000000  00002178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000029e  00000000  00000000  000025dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000287b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 ab 00 	jmp	0x156	; 0x156 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 84 00 	call	0x108	; 0x108 <main>
  88:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <initADC>:
 *  Author: jaidy
 */ 
#include "ADC.h"

void initADC(void){
	ADMUX = 0;
  90:	ec e7       	ldi	r30, 0x7C	; 124
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);		// VREF = AVCC
  96:	80 81       	ld	r24, Z
  98:	80 64       	ori	r24, 0x40	; 64
  9a:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);		// VREF = AVCC
  9c:	80 81       	ld	r24, Z
  9e:	8f 77       	andi	r24, 0x7F	; 127
  a0:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR);		// JUSTIFICACION A LA DERECHA
  a2:	80 81       	ld	r24, Z
  a4:	80 62       	ori	r24, 0x20	; 32
  a6:	80 83       	st	Z, r24
	
	ADCSRA = 0;
  a8:	ea e7       	ldi	r30, 0x7A	; 122
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);		// ENCIENDER EL ADC
  ae:	80 81       	ld	r24, Z
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE);		// HABILITAR ISR ADC
  b4:	80 81       	ld	r24, Z
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0);
  ba:	80 81       	ld	r24, Z
  bc:	81 60       	ori	r24, 0x01	; 1
  be:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1);
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2);		// PRESCALES 128 -> 16M = 125kHz
  c6:	80 81       	ld	r24, Z
  c8:	84 60       	ori	r24, 0x04	; 4
  ca:	80 83       	st	Z, r24
	
	DIDR0 |= (1 << ADC0D);		// DESABILITAR LA ENTRADA DIGITAL PC0
  cc:	ee e7       	ldi	r30, 0x7E	; 126
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	81 60       	ori	r24, 0x01	; 1
  d4:	80 83       	st	Z, r24
	DIDR0 |= (1 << ADC1D);		// DESABILITAR LA ENTRADA DIGITAL PC1
  d6:	80 81       	ld	r24, Z
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	80 83       	st	Z, r24
	DIDR0 |= (1 << ADC2D);		// DESABILITAR LA ENTRADA DIGITAL PC1
  dc:	80 81       	ld	r24, Z
  de:	84 60       	ori	r24, 0x04	; 4
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret

000000e4 <ADC_CONVERT>:
}

uint8_t ADC_CONVERT(uint8_t canal){
	ADMUX = (ADMUX & 0xF0)|canal;	// SELECCION DEL CANAL
  e4:	ec e7       	ldi	r30, 0x7C	; 124
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	90 81       	ld	r25, Z
  ea:	90 7f       	andi	r25, 0xF0	; 240
  ec:	89 2b       	or	r24, r25
  ee:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);			// INICIA EL ADC
  f0:	ea e7       	ldi	r30, 0x7A	; 122
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	80 64       	ori	r24, 0x40	; 64
  f8:	80 83       	st	Z, r24
	while((ADCSRA)&(1<<ADSC));		// FINALIZA LA CONVERSION
  fa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  fe:	86 fd       	sbrc	r24, 6
 100:	fc cf       	rjmp	.-8      	; 0xfa <ADC_CONVERT+0x16>
	return(ADCH);
 102:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 106:	08 95       	ret

00000108 <main>:
    }
}

void setup (void){
	UCSR0B = 0;		// DESABILITA TX Y RX
	DDRC = 0;		// PUERTO C COMO ENTRADA
 108:	f8 94       	cli
 10a:	14 bc       	out	0x24, r1	; 36
 10c:	15 bc       	out	0x25, r1	; 37
 10e:	0e 94 48 00 	call	0x90	; 0x90 <initADC>
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	74 e0       	ldi	r23, 0x04	; 4
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <initPWM0A>
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	74 e0       	ldi	r23, 0x04	; 4
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	0e 94 07 01 	call	0x20e	; 0x20e <initPWM0B>
 126:	78 94       	sei
 128:	8f e3       	ldi	r24, 0x3F	; 63
 12a:	9c e9       	ldi	r25, 0x9C	; 156
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0x24>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x2a>
 132:	00 00       	nop
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_CONVERT>
 13a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <DutyC1>
 13e:	8f e3       	ldi	r24, 0x3F	; 63
 140:	9c e9       	ldi	r25, 0x9C	; 156
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0x3a>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x40>
 148:	00 00       	nop
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_CONVERT>
 150:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 154:	e9 cf       	rjmp	.-46     	; 0x128 <main+0x20>

00000156 <__vector_16>:
}

ISR (TIMER0_OVF_vect){
 156:	1f 92       	push	r1
 158:	0f 92       	push	r0
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	0f 92       	push	r0
 15e:	11 24       	eor	r1, r1
 160:	2f 93       	push	r18
 162:	3f 93       	push	r19
 164:	4f 93       	push	r20
 166:	5f 93       	push	r21
 168:	6f 93       	push	r22
 16a:	7f 93       	push	r23
 16c:	8f 93       	push	r24
 16e:	9f 93       	push	r25
 170:	af 93       	push	r26
 172:	bf 93       	push	r27
 174:	ef 93       	push	r30
 176:	ff 93       	push	r31
	updateDutyCA(DutyC1);
 178:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <DutyC1>
 17c:	0e 94 24 01 	call	0x248	; 0x248 <updateDutyCA>
	updateDutyCB(DutyC2);
 180:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 184:	0e 94 40 01 	call	0x280	; 0x280 <updateDutyCB>
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	7f 91       	pop	r23
 196:	6f 91       	pop	r22
 198:	5f 91       	pop	r21
 19a:	4f 91       	pop	r20
 19c:	3f 91       	pop	r19
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <__vector_21>:

ISR(ADC_vect){
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	8f 93       	push	r24
 1b6:	ef 93       	push	r30
 1b8:	ff 93       	push	r31
	ADCSRA |= (1 << ADIF);	//LIMPIA LA BANDERA
 1ba:	ea e7       	ldi	r30, 0x7A	; 122
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	80 61       	ori	r24, 0x10	; 16
 1c2:	80 83       	st	Z, r24
}
 1c4:	ff 91       	pop	r31
 1c6:	ef 91       	pop	r30
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <initPWM0A>:
 *  Author: jaidy
 */ 
#include "PWM0.h"

void initPWM0A(uint8_t inverted, uint16_t prescaler){
	DDRD |= (1 << DDD6); //PD6 COMO SALIDA
 1d4:	9a b1       	in	r25, 0x0a	; 10
 1d6:	90 64       	ori	r25, 0x40	; 64
 1d8:	9a b9       	out	0x0a, r25	; 10
	TCCR0A |= (1 << WGM01)|(1 << WGM00); //PWM MODO FAST
 1da:	94 b5       	in	r25, 0x24	; 36
 1dc:	93 60       	ori	r25, 0x03	; 3
 1de:	94 bd       	out	0x24, r25	; 36
	TIMSK0 = (1<<TOIE0);
 1e0:	91 e0       	ldi	r25, 0x01	; 1
 1e2:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	
	if (inverted) {
 1e6:	88 23       	and	r24, r24
 1e8:	21 f0       	breq	.+8      	; 0x1f2 <initPWM0A+0x1e>
		TCCR0A |= (1 << COM0A1)|(1 << COM0A0);//PWM INVERTIDO
 1ea:	84 b5       	in	r24, 0x24	; 36
 1ec:	80 6c       	ori	r24, 0xC0	; 192
 1ee:	84 bd       	out	0x24, r24	; 36
 1f0:	03 c0       	rjmp	.+6      	; 0x1f8 <initPWM0A+0x24>
		} else	 {
		TCCR0A |= (1 << COM0A1);//PWM NO INVERTIDO
 1f2:	84 b5       	in	r24, 0x24	; 36
 1f4:	80 68       	ori	r24, 0x80	; 128
 1f6:	84 bd       	out	0x24, r24	; 36
	}

	if (prescaler == 1024) {
 1f8:	61 15       	cp	r22, r1
 1fa:	74 40       	sbci	r23, 0x04	; 4
 1fc:	21 f4       	brne	.+8      	; 0x206 <initPWM0A+0x32>
		TCCR0B |= (1 << CS02)|(1 << CS00);
 1fe:	85 b5       	in	r24, 0x25	; 37
 200:	85 60       	ori	r24, 0x05	; 5
 202:	85 bd       	out	0x25, r24	; 37
 204:	08 95       	ret
		} else {
		TCCR0B |= (1 << CS00);
 206:	85 b5       	in	r24, 0x25	; 37
 208:	81 60       	ori	r24, 0x01	; 1
 20a:	85 bd       	out	0x25, r24	; 37
 20c:	08 95       	ret

0000020e <initPWM0B>:
	

}

void initPWM0B(uint8_t inverted, uint16_t prescaler){
	DDRD |= (1 << DDD5); //PD5 COMO SALIDA
 20e:	9a b1       	in	r25, 0x0a	; 10
 210:	90 62       	ori	r25, 0x20	; 32
 212:	9a b9       	out	0x0a, r25	; 10
	TCCR0A |= (1 << WGM01)|(1 << WGM00); //PWM MODO FAST
 214:	94 b5       	in	r25, 0x24	; 36
 216:	93 60       	ori	r25, 0x03	; 3
 218:	94 bd       	out	0x24, r25	; 36
	TIMSK0 = (1<<TOIE0);
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	
	if (inverted) {
 220:	88 23       	and	r24, r24
 222:	21 f0       	breq	.+8      	; 0x22c <initPWM0B+0x1e>
		TCCR0A |= (1 << COM0B1)|(1 << COM0B0);//PWM INVERTIDO
 224:	84 b5       	in	r24, 0x24	; 36
 226:	80 63       	ori	r24, 0x30	; 48
 228:	84 bd       	out	0x24, r24	; 36
 22a:	03 c0       	rjmp	.+6      	; 0x232 <initPWM0B+0x24>
		} else	 {
		TCCR0A |= (1 << COM0B1);//PWM NO INVERTIDO
 22c:	84 b5       	in	r24, 0x24	; 36
 22e:	80 62       	ori	r24, 0x20	; 32
 230:	84 bd       	out	0x24, r24	; 36
	}
	
	if (prescaler == 1024) {
 232:	61 15       	cp	r22, r1
 234:	74 40       	sbci	r23, 0x04	; 4
 236:	21 f4       	brne	.+8      	; 0x240 <initPWM0B+0x32>
		TCCR0B |= (1 << CS02)|(1 << CS00);
 238:	85 b5       	in	r24, 0x25	; 37
 23a:	85 60       	ori	r24, 0x05	; 5
 23c:	85 bd       	out	0x25, r24	; 37
 23e:	08 95       	ret
		} else {
		TCCR0B |= (1 << CS00);
 240:	85 b5       	in	r24, 0x25	; 37
 242:	81 60       	ori	r24, 0x01	; 1
 244:	85 bd       	out	0x25, r24	; 37
 246:	08 95       	ret

00000248 <updateDutyCA>:
	}
}

void updateDutyCA(uint8_t duty){
	OCR0A = ((duty/255.0)*30)+6;
 248:	68 2f       	mov	r22, r24
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__floatsisf>
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	4f e7       	ldi	r20, 0x7F	; 127
 25a:	53 e4       	ldi	r21, 0x43	; 67
 25c:	0e 94 c9 01 	call	0x392	; 0x392 <__divsf3>
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	40 ef       	ldi	r20, 0xF0	; 240
 266:	51 e4       	ldi	r21, 0x41	; 65
 268:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__mulsf3>
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	40 ec       	ldi	r20, 0xC0	; 192
 272:	50 e4       	ldi	r21, 0x40	; 64
 274:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__addsf3>
 278:	0e 94 3b 02 	call	0x476	; 0x476 <__fixunssfsi>
 27c:	67 bd       	out	0x27, r22	; 39
 27e:	08 95       	ret

00000280 <updateDutyCB>:
}

void updateDutyCB(uint8_t duty){
	OCR0B = ((duty/255.0)*30)+6;
 280:	68 2f       	mov	r22, r24
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__floatsisf>
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	4f e7       	ldi	r20, 0x7F	; 127
 292:	53 e4       	ldi	r21, 0x43	; 67
 294:	0e 94 c9 01 	call	0x392	; 0x392 <__divsf3>
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	40 ef       	ldi	r20, 0xF0	; 240
 29e:	51 e4       	ldi	r21, 0x41	; 65
 2a0:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__mulsf3>
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	40 ec       	ldi	r20, 0xC0	; 192
 2aa:	50 e4       	ldi	r21, 0x40	; 64
 2ac:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__addsf3>
 2b0:	0e 94 3b 02 	call	0x476	; 0x476 <__fixunssfsi>
 2b4:	68 bd       	out	0x28, r22	; 40
 2b6:	08 95       	ret

000002b8 <__subsf3>:
 2b8:	50 58       	subi	r21, 0x80	; 128

000002ba <__addsf3>:
 2ba:	bb 27       	eor	r27, r27
 2bc:	aa 27       	eor	r26, r26
 2be:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__addsf3x>
 2c2:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_round>
 2c6:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscA>
 2ca:	38 f0       	brcs	.+14     	; 0x2da <__addsf3+0x20>
 2cc:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscB>
 2d0:	20 f0       	brcs	.+8      	; 0x2da <__addsf3+0x20>
 2d2:	39 f4       	brne	.+14     	; 0x2e2 <__addsf3+0x28>
 2d4:	9f 3f       	cpi	r25, 0xFF	; 255
 2d6:	19 f4       	brne	.+6      	; 0x2de <__addsf3+0x24>
 2d8:	26 f4       	brtc	.+8      	; 0x2e2 <__addsf3+0x28>
 2da:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_nan>
 2de:	0e f4       	brtc	.+2      	; 0x2e2 <__addsf3+0x28>
 2e0:	e0 95       	com	r30
 2e2:	e7 fb       	bst	r30, 7
 2e4:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>

000002e8 <__addsf3x>:
 2e8:	e9 2f       	mov	r30, r25
 2ea:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_split3>
 2ee:	58 f3       	brcs	.-42     	; 0x2c6 <__addsf3+0xc>
 2f0:	ba 17       	cp	r27, r26
 2f2:	62 07       	cpc	r22, r18
 2f4:	73 07       	cpc	r23, r19
 2f6:	84 07       	cpc	r24, r20
 2f8:	95 07       	cpc	r25, r21
 2fa:	20 f0       	brcs	.+8      	; 0x304 <__addsf3x+0x1c>
 2fc:	79 f4       	brne	.+30     	; 0x31c <__addsf3x+0x34>
 2fe:	a6 f5       	brtc	.+104    	; 0x368 <__addsf3x+0x80>
 300:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_zero>
 304:	0e f4       	brtc	.+2      	; 0x308 <__addsf3x+0x20>
 306:	e0 95       	com	r30
 308:	0b 2e       	mov	r0, r27
 30a:	ba 2f       	mov	r27, r26
 30c:	a0 2d       	mov	r26, r0
 30e:	0b 01       	movw	r0, r22
 310:	b9 01       	movw	r22, r18
 312:	90 01       	movw	r18, r0
 314:	0c 01       	movw	r0, r24
 316:	ca 01       	movw	r24, r20
 318:	a0 01       	movw	r20, r0
 31a:	11 24       	eor	r1, r1
 31c:	ff 27       	eor	r31, r31
 31e:	59 1b       	sub	r21, r25
 320:	99 f0       	breq	.+38     	; 0x348 <__addsf3x+0x60>
 322:	59 3f       	cpi	r21, 0xF9	; 249
 324:	50 f4       	brcc	.+20     	; 0x33a <__addsf3x+0x52>
 326:	50 3e       	cpi	r21, 0xE0	; 224
 328:	68 f1       	brcs	.+90     	; 0x384 <__addsf3x+0x9c>
 32a:	1a 16       	cp	r1, r26
 32c:	f0 40       	sbci	r31, 0x00	; 0
 32e:	a2 2f       	mov	r26, r18
 330:	23 2f       	mov	r18, r19
 332:	34 2f       	mov	r19, r20
 334:	44 27       	eor	r20, r20
 336:	58 5f       	subi	r21, 0xF8	; 248
 338:	f3 cf       	rjmp	.-26     	; 0x320 <__addsf3x+0x38>
 33a:	46 95       	lsr	r20
 33c:	37 95       	ror	r19
 33e:	27 95       	ror	r18
 340:	a7 95       	ror	r26
 342:	f0 40       	sbci	r31, 0x00	; 0
 344:	53 95       	inc	r21
 346:	c9 f7       	brne	.-14     	; 0x33a <__addsf3x+0x52>
 348:	7e f4       	brtc	.+30     	; 0x368 <__addsf3x+0x80>
 34a:	1f 16       	cp	r1, r31
 34c:	ba 0b       	sbc	r27, r26
 34e:	62 0b       	sbc	r22, r18
 350:	73 0b       	sbc	r23, r19
 352:	84 0b       	sbc	r24, r20
 354:	ba f0       	brmi	.+46     	; 0x384 <__addsf3x+0x9c>
 356:	91 50       	subi	r25, 0x01	; 1
 358:	a1 f0       	breq	.+40     	; 0x382 <__addsf3x+0x9a>
 35a:	ff 0f       	add	r31, r31
 35c:	bb 1f       	adc	r27, r27
 35e:	66 1f       	adc	r22, r22
 360:	77 1f       	adc	r23, r23
 362:	88 1f       	adc	r24, r24
 364:	c2 f7       	brpl	.-16     	; 0x356 <__addsf3x+0x6e>
 366:	0e c0       	rjmp	.+28     	; 0x384 <__addsf3x+0x9c>
 368:	ba 0f       	add	r27, r26
 36a:	62 1f       	adc	r22, r18
 36c:	73 1f       	adc	r23, r19
 36e:	84 1f       	adc	r24, r20
 370:	48 f4       	brcc	.+18     	; 0x384 <__addsf3x+0x9c>
 372:	87 95       	ror	r24
 374:	77 95       	ror	r23
 376:	67 95       	ror	r22
 378:	b7 95       	ror	r27
 37a:	f7 95       	ror	r31
 37c:	9e 3f       	cpi	r25, 0xFE	; 254
 37e:	08 f0       	brcs	.+2      	; 0x382 <__addsf3x+0x9a>
 380:	b0 cf       	rjmp	.-160    	; 0x2e2 <__addsf3+0x28>
 382:	93 95       	inc	r25
 384:	88 0f       	add	r24, r24
 386:	08 f0       	brcs	.+2      	; 0x38a <__addsf3x+0xa2>
 388:	99 27       	eor	r25, r25
 38a:	ee 0f       	add	r30, r30
 38c:	97 95       	ror	r25
 38e:	87 95       	ror	r24
 390:	08 95       	ret

00000392 <__divsf3>:
 392:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__divsf3x>
 396:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_round>
 39a:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscB>
 39e:	58 f0       	brcs	.+22     	; 0x3b6 <__divsf3+0x24>
 3a0:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscA>
 3a4:	40 f0       	brcs	.+16     	; 0x3b6 <__divsf3+0x24>
 3a6:	29 f4       	brne	.+10     	; 0x3b2 <__divsf3+0x20>
 3a8:	5f 3f       	cpi	r21, 0xFF	; 255
 3aa:	29 f0       	breq	.+10     	; 0x3b6 <__divsf3+0x24>
 3ac:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 3b0:	51 11       	cpse	r21, r1
 3b2:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>
 3b6:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_nan>

000003ba <__divsf3x>:
 3ba:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_split3>
 3be:	68 f3       	brcs	.-38     	; 0x39a <__divsf3+0x8>

000003c0 <__divsf3_pse>:
 3c0:	99 23       	and	r25, r25
 3c2:	b1 f3       	breq	.-20     	; 0x3b0 <__divsf3+0x1e>
 3c4:	55 23       	and	r21, r21
 3c6:	91 f3       	breq	.-28     	; 0x3ac <__divsf3+0x1a>
 3c8:	95 1b       	sub	r25, r21
 3ca:	55 0b       	sbc	r21, r21
 3cc:	bb 27       	eor	r27, r27
 3ce:	aa 27       	eor	r26, r26
 3d0:	62 17       	cp	r22, r18
 3d2:	73 07       	cpc	r23, r19
 3d4:	84 07       	cpc	r24, r20
 3d6:	38 f0       	brcs	.+14     	; 0x3e6 <__divsf3_pse+0x26>
 3d8:	9f 5f       	subi	r25, 0xFF	; 255
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	22 0f       	add	r18, r18
 3de:	33 1f       	adc	r19, r19
 3e0:	44 1f       	adc	r20, r20
 3e2:	aa 1f       	adc	r26, r26
 3e4:	a9 f3       	breq	.-22     	; 0x3d0 <__divsf3_pse+0x10>
 3e6:	35 d0       	rcall	.+106    	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 3e8:	0e 2e       	mov	r0, r30
 3ea:	3a f0       	brmi	.+14     	; 0x3fa <__divsf3_pse+0x3a>
 3ec:	e0 e8       	ldi	r30, 0x80	; 128
 3ee:	32 d0       	rcall	.+100    	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 3f0:	91 50       	subi	r25, 0x01	; 1
 3f2:	50 40       	sbci	r21, 0x00	; 0
 3f4:	e6 95       	lsr	r30
 3f6:	00 1c       	adc	r0, r0
 3f8:	ca f7       	brpl	.-14     	; 0x3ec <__divsf3_pse+0x2c>
 3fa:	2b d0       	rcall	.+86     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 3fc:	fe 2f       	mov	r31, r30
 3fe:	29 d0       	rcall	.+82     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	88 1f       	adc	r24, r24
 406:	bb 1f       	adc	r27, r27
 408:	26 17       	cp	r18, r22
 40a:	37 07       	cpc	r19, r23
 40c:	48 07       	cpc	r20, r24
 40e:	ab 07       	cpc	r26, r27
 410:	b0 e8       	ldi	r27, 0x80	; 128
 412:	09 f0       	breq	.+2      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 414:	bb 0b       	sbc	r27, r27
 416:	80 2d       	mov	r24, r0
 418:	bf 01       	movw	r22, r30
 41a:	ff 27       	eor	r31, r31
 41c:	93 58       	subi	r25, 0x83	; 131
 41e:	5f 4f       	sbci	r21, 0xFF	; 255
 420:	3a f0       	brmi	.+14     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 422:	9e 3f       	cpi	r25, 0xFE	; 254
 424:	51 05       	cpc	r21, r1
 426:	78 f0       	brcs	.+30     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 428:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 42c:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	e4 f3       	brlt	.-8      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 434:	98 3e       	cpi	r25, 0xE8	; 232
 436:	d4 f3       	brlt	.-12     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 438:	86 95       	lsr	r24
 43a:	77 95       	ror	r23
 43c:	67 95       	ror	r22
 43e:	b7 95       	ror	r27
 440:	f7 95       	ror	r31
 442:	9f 5f       	subi	r25, 0xFF	; 255
 444:	c9 f7       	brne	.-14     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 446:	88 0f       	add	r24, r24
 448:	91 1d       	adc	r25, r1
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	97 f9       	bld	r25, 7
 450:	08 95       	ret
 452:	e1 e0       	ldi	r30, 0x01	; 1
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	bb 1f       	adc	r27, r27
 45c:	62 17       	cp	r22, r18
 45e:	73 07       	cpc	r23, r19
 460:	84 07       	cpc	r24, r20
 462:	ba 07       	cpc	r27, r26
 464:	20 f0       	brcs	.+8      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 466:	62 1b       	sub	r22, r18
 468:	73 0b       	sbc	r23, r19
 46a:	84 0b       	sbc	r24, r20
 46c:	ba 0b       	sbc	r27, r26
 46e:	ee 1f       	adc	r30, r30
 470:	88 f7       	brcc	.-30     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 472:	e0 95       	com	r30
 474:	08 95       	ret

00000476 <__fixunssfsi>:
 476:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_splitA>
 47a:	88 f0       	brcs	.+34     	; 0x49e <__fixunssfsi+0x28>
 47c:	9f 57       	subi	r25, 0x7F	; 127
 47e:	98 f0       	brcs	.+38     	; 0x4a6 <__fixunssfsi+0x30>
 480:	b9 2f       	mov	r27, r25
 482:	99 27       	eor	r25, r25
 484:	b7 51       	subi	r27, 0x17	; 23
 486:	b0 f0       	brcs	.+44     	; 0x4b4 <__fixunssfsi+0x3e>
 488:	e1 f0       	breq	.+56     	; 0x4c2 <__fixunssfsi+0x4c>
 48a:	66 0f       	add	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	88 1f       	adc	r24, r24
 490:	99 1f       	adc	r25, r25
 492:	1a f0       	brmi	.+6      	; 0x49a <__fixunssfsi+0x24>
 494:	ba 95       	dec	r27
 496:	c9 f7       	brne	.-14     	; 0x48a <__fixunssfsi+0x14>
 498:	14 c0       	rjmp	.+40     	; 0x4c2 <__fixunssfsi+0x4c>
 49a:	b1 30       	cpi	r27, 0x01	; 1
 49c:	91 f0       	breq	.+36     	; 0x4c2 <__fixunssfsi+0x4c>
 49e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_zero>
 4a2:	b1 e0       	ldi	r27, 0x01	; 1
 4a4:	08 95       	ret
 4a6:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_zero>
 4aa:	67 2f       	mov	r22, r23
 4ac:	78 2f       	mov	r23, r24
 4ae:	88 27       	eor	r24, r24
 4b0:	b8 5f       	subi	r27, 0xF8	; 248
 4b2:	39 f0       	breq	.+14     	; 0x4c2 <__fixunssfsi+0x4c>
 4b4:	b9 3f       	cpi	r27, 0xF9	; 249
 4b6:	cc f3       	brlt	.-14     	; 0x4aa <__fixunssfsi+0x34>
 4b8:	86 95       	lsr	r24
 4ba:	77 95       	ror	r23
 4bc:	67 95       	ror	r22
 4be:	b3 95       	inc	r27
 4c0:	d9 f7       	brne	.-10     	; 0x4b8 <__fixunssfsi+0x42>
 4c2:	3e f4       	brtc	.+14     	; 0x4d2 <__fixunssfsi+0x5c>
 4c4:	90 95       	com	r25
 4c6:	80 95       	com	r24
 4c8:	70 95       	com	r23
 4ca:	61 95       	neg	r22
 4cc:	7f 4f       	sbci	r23, 0xFF	; 255
 4ce:	8f 4f       	sbci	r24, 0xFF	; 255
 4d0:	9f 4f       	sbci	r25, 0xFF	; 255
 4d2:	08 95       	ret

000004d4 <__floatunsisf>:
 4d4:	e8 94       	clt
 4d6:	09 c0       	rjmp	.+18     	; 0x4ea <__floatsisf+0x12>

000004d8 <__floatsisf>:
 4d8:	97 fb       	bst	r25, 7
 4da:	3e f4       	brtc	.+14     	; 0x4ea <__floatsisf+0x12>
 4dc:	90 95       	com	r25
 4de:	80 95       	com	r24
 4e0:	70 95       	com	r23
 4e2:	61 95       	neg	r22
 4e4:	7f 4f       	sbci	r23, 0xFF	; 255
 4e6:	8f 4f       	sbci	r24, 0xFF	; 255
 4e8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ea:	99 23       	and	r25, r25
 4ec:	a9 f0       	breq	.+42     	; 0x518 <__floatsisf+0x40>
 4ee:	f9 2f       	mov	r31, r25
 4f0:	96 e9       	ldi	r25, 0x96	; 150
 4f2:	bb 27       	eor	r27, r27
 4f4:	93 95       	inc	r25
 4f6:	f6 95       	lsr	r31
 4f8:	87 95       	ror	r24
 4fa:	77 95       	ror	r23
 4fc:	67 95       	ror	r22
 4fe:	b7 95       	ror	r27
 500:	f1 11       	cpse	r31, r1
 502:	f8 cf       	rjmp	.-16     	; 0x4f4 <__floatsisf+0x1c>
 504:	fa f4       	brpl	.+62     	; 0x544 <__floatsisf+0x6c>
 506:	bb 0f       	add	r27, r27
 508:	11 f4       	brne	.+4      	; 0x50e <__floatsisf+0x36>
 50a:	60 ff       	sbrs	r22, 0
 50c:	1b c0       	rjmp	.+54     	; 0x544 <__floatsisf+0x6c>
 50e:	6f 5f       	subi	r22, 0xFF	; 255
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	8f 4f       	sbci	r24, 0xFF	; 255
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	16 c0       	rjmp	.+44     	; 0x544 <__floatsisf+0x6c>
 518:	88 23       	and	r24, r24
 51a:	11 f0       	breq	.+4      	; 0x520 <__floatsisf+0x48>
 51c:	96 e9       	ldi	r25, 0x96	; 150
 51e:	11 c0       	rjmp	.+34     	; 0x542 <__floatsisf+0x6a>
 520:	77 23       	and	r23, r23
 522:	21 f0       	breq	.+8      	; 0x52c <__floatsisf+0x54>
 524:	9e e8       	ldi	r25, 0x8E	; 142
 526:	87 2f       	mov	r24, r23
 528:	76 2f       	mov	r23, r22
 52a:	05 c0       	rjmp	.+10     	; 0x536 <__floatsisf+0x5e>
 52c:	66 23       	and	r22, r22
 52e:	71 f0       	breq	.+28     	; 0x54c <__floatsisf+0x74>
 530:	96 e8       	ldi	r25, 0x86	; 134
 532:	86 2f       	mov	r24, r22
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	60 e0       	ldi	r22, 0x00	; 0
 538:	2a f0       	brmi	.+10     	; 0x544 <__floatsisf+0x6c>
 53a:	9a 95       	dec	r25
 53c:	66 0f       	add	r22, r22
 53e:	77 1f       	adc	r23, r23
 540:	88 1f       	adc	r24, r24
 542:	da f7       	brpl	.-10     	; 0x53a <__floatsisf+0x62>
 544:	88 0f       	add	r24, r24
 546:	96 95       	lsr	r25
 548:	87 95       	ror	r24
 54a:	97 f9       	bld	r25, 7
 54c:	08 95       	ret

0000054e <__fp_inf>:
 54e:	97 f9       	bld	r25, 7
 550:	9f 67       	ori	r25, 0x7F	; 127
 552:	80 e8       	ldi	r24, 0x80	; 128
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	08 95       	ret

0000055a <__fp_nan>:
 55a:	9f ef       	ldi	r25, 0xFF	; 255
 55c:	80 ec       	ldi	r24, 0xC0	; 192
 55e:	08 95       	ret

00000560 <__fp_pscA>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	16 16       	cp	r1, r22
 566:	17 06       	cpc	r1, r23
 568:	18 06       	cpc	r1, r24
 56a:	09 06       	cpc	r0, r25
 56c:	08 95       	ret

0000056e <__fp_pscB>:
 56e:	00 24       	eor	r0, r0
 570:	0a 94       	dec	r0
 572:	12 16       	cp	r1, r18
 574:	13 06       	cpc	r1, r19
 576:	14 06       	cpc	r1, r20
 578:	05 06       	cpc	r0, r21
 57a:	08 95       	ret

0000057c <__fp_round>:
 57c:	09 2e       	mov	r0, r25
 57e:	03 94       	inc	r0
 580:	00 0c       	add	r0, r0
 582:	11 f4       	brne	.+4      	; 0x588 <__fp_round+0xc>
 584:	88 23       	and	r24, r24
 586:	52 f0       	brmi	.+20     	; 0x59c <__fp_round+0x20>
 588:	bb 0f       	add	r27, r27
 58a:	40 f4       	brcc	.+16     	; 0x59c <__fp_round+0x20>
 58c:	bf 2b       	or	r27, r31
 58e:	11 f4       	brne	.+4      	; 0x594 <__fp_round+0x18>
 590:	60 ff       	sbrs	r22, 0
 592:	04 c0       	rjmp	.+8      	; 0x59c <__fp_round+0x20>
 594:	6f 5f       	subi	r22, 0xFF	; 255
 596:	7f 4f       	sbci	r23, 0xFF	; 255
 598:	8f 4f       	sbci	r24, 0xFF	; 255
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	08 95       	ret

0000059e <__fp_split3>:
 59e:	57 fd       	sbrc	r21, 7
 5a0:	90 58       	subi	r25, 0x80	; 128
 5a2:	44 0f       	add	r20, r20
 5a4:	55 1f       	adc	r21, r21
 5a6:	59 f0       	breq	.+22     	; 0x5be <__fp_splitA+0x10>
 5a8:	5f 3f       	cpi	r21, 0xFF	; 255
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <__fp_splitA+0x1a>
 5ac:	47 95       	ror	r20

000005ae <__fp_splitA>:
 5ae:	88 0f       	add	r24, r24
 5b0:	97 fb       	bst	r25, 7
 5b2:	99 1f       	adc	r25, r25
 5b4:	61 f0       	breq	.+24     	; 0x5ce <__fp_splitA+0x20>
 5b6:	9f 3f       	cpi	r25, 0xFF	; 255
 5b8:	79 f0       	breq	.+30     	; 0x5d8 <__fp_splitA+0x2a>
 5ba:	87 95       	ror	r24
 5bc:	08 95       	ret
 5be:	12 16       	cp	r1, r18
 5c0:	13 06       	cpc	r1, r19
 5c2:	14 06       	cpc	r1, r20
 5c4:	55 1f       	adc	r21, r21
 5c6:	f2 cf       	rjmp	.-28     	; 0x5ac <__fp_split3+0xe>
 5c8:	46 95       	lsr	r20
 5ca:	f1 df       	rcall	.-30     	; 0x5ae <__fp_splitA>
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <__fp_splitA+0x30>
 5ce:	16 16       	cp	r1, r22
 5d0:	17 06       	cpc	r1, r23
 5d2:	18 06       	cpc	r1, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	f1 cf       	rjmp	.-30     	; 0x5ba <__fp_splitA+0xc>
 5d8:	86 95       	lsr	r24
 5da:	71 05       	cpc	r23, r1
 5dc:	61 05       	cpc	r22, r1
 5de:	08 94       	sec
 5e0:	08 95       	ret

000005e2 <__fp_zero>:
 5e2:	e8 94       	clt

000005e4 <__fp_szero>:
 5e4:	bb 27       	eor	r27, r27
 5e6:	66 27       	eor	r22, r22
 5e8:	77 27       	eor	r23, r23
 5ea:	cb 01       	movw	r24, r22
 5ec:	97 f9       	bld	r25, 7
 5ee:	08 95       	ret

000005f0 <__mulsf3>:
 5f0:	0e 94 0b 03 	call	0x616	; 0x616 <__mulsf3x>
 5f4:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_round>
 5f8:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscA>
 5fc:	38 f0       	brcs	.+14     	; 0x60c <__mulsf3+0x1c>
 5fe:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscB>
 602:	20 f0       	brcs	.+8      	; 0x60c <__mulsf3+0x1c>
 604:	95 23       	and	r25, r21
 606:	11 f0       	breq	.+4      	; 0x60c <__mulsf3+0x1c>
 608:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 60c:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_nan>
 610:	11 24       	eor	r1, r1
 612:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>

00000616 <__mulsf3x>:
 616:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_split3>
 61a:	70 f3       	brcs	.-36     	; 0x5f8 <__mulsf3+0x8>

0000061c <__mulsf3_pse>:
 61c:	95 9f       	mul	r25, r21
 61e:	c1 f3       	breq	.-16     	; 0x610 <__mulsf3+0x20>
 620:	95 0f       	add	r25, r21
 622:	50 e0       	ldi	r21, 0x00	; 0
 624:	55 1f       	adc	r21, r21
 626:	62 9f       	mul	r22, r18
 628:	f0 01       	movw	r30, r0
 62a:	72 9f       	mul	r23, r18
 62c:	bb 27       	eor	r27, r27
 62e:	f0 0d       	add	r31, r0
 630:	b1 1d       	adc	r27, r1
 632:	63 9f       	mul	r22, r19
 634:	aa 27       	eor	r26, r26
 636:	f0 0d       	add	r31, r0
 638:	b1 1d       	adc	r27, r1
 63a:	aa 1f       	adc	r26, r26
 63c:	64 9f       	mul	r22, r20
 63e:	66 27       	eor	r22, r22
 640:	b0 0d       	add	r27, r0
 642:	a1 1d       	adc	r26, r1
 644:	66 1f       	adc	r22, r22
 646:	82 9f       	mul	r24, r18
 648:	22 27       	eor	r18, r18
 64a:	b0 0d       	add	r27, r0
 64c:	a1 1d       	adc	r26, r1
 64e:	62 1f       	adc	r22, r18
 650:	73 9f       	mul	r23, r19
 652:	b0 0d       	add	r27, r0
 654:	a1 1d       	adc	r26, r1
 656:	62 1f       	adc	r22, r18
 658:	83 9f       	mul	r24, r19
 65a:	a0 0d       	add	r26, r0
 65c:	61 1d       	adc	r22, r1
 65e:	22 1f       	adc	r18, r18
 660:	74 9f       	mul	r23, r20
 662:	33 27       	eor	r19, r19
 664:	a0 0d       	add	r26, r0
 666:	61 1d       	adc	r22, r1
 668:	23 1f       	adc	r18, r19
 66a:	84 9f       	mul	r24, r20
 66c:	60 0d       	add	r22, r0
 66e:	21 1d       	adc	r18, r1
 670:	82 2f       	mov	r24, r18
 672:	76 2f       	mov	r23, r22
 674:	6a 2f       	mov	r22, r26
 676:	11 24       	eor	r1, r1
 678:	9f 57       	subi	r25, 0x7F	; 127
 67a:	50 40       	sbci	r21, 0x00	; 0
 67c:	9a f0       	brmi	.+38     	; 0x6a4 <__mulsf3_pse+0x88>
 67e:	f1 f0       	breq	.+60     	; 0x6bc <__mulsf3_pse+0xa0>
 680:	88 23       	and	r24, r24
 682:	4a f0       	brmi	.+18     	; 0x696 <__mulsf3_pse+0x7a>
 684:	ee 0f       	add	r30, r30
 686:	ff 1f       	adc	r31, r31
 688:	bb 1f       	adc	r27, r27
 68a:	66 1f       	adc	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	88 1f       	adc	r24, r24
 690:	91 50       	subi	r25, 0x01	; 1
 692:	50 40       	sbci	r21, 0x00	; 0
 694:	a9 f7       	brne	.-22     	; 0x680 <__mulsf3_pse+0x64>
 696:	9e 3f       	cpi	r25, 0xFE	; 254
 698:	51 05       	cpc	r21, r1
 69a:	80 f0       	brcs	.+32     	; 0x6bc <__mulsf3_pse+0xa0>
 69c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 6a0:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>
 6a4:	5f 3f       	cpi	r21, 0xFF	; 255
 6a6:	e4 f3       	brlt	.-8      	; 0x6a0 <__mulsf3_pse+0x84>
 6a8:	98 3e       	cpi	r25, 0xE8	; 232
 6aa:	d4 f3       	brlt	.-12     	; 0x6a0 <__mulsf3_pse+0x84>
 6ac:	86 95       	lsr	r24
 6ae:	77 95       	ror	r23
 6b0:	67 95       	ror	r22
 6b2:	b7 95       	ror	r27
 6b4:	f7 95       	ror	r31
 6b6:	e7 95       	ror	r30
 6b8:	9f 5f       	subi	r25, 0xFF	; 255
 6ba:	c1 f7       	brne	.-16     	; 0x6ac <__mulsf3_pse+0x90>
 6bc:	fe 2b       	or	r31, r30
 6be:	88 0f       	add	r24, r24
 6c0:	91 1d       	adc	r25, r1
 6c2:	96 95       	lsr	r25
 6c4:	87 95       	ror	r24
 6c6:	97 f9       	bld	r25, 7
 6c8:	08 95       	ret

000006ca <_exit>:
 6ca:	f8 94       	cli

000006cc <__stop_program>:
 6cc:	ff cf       	rjmp	.-2      	; 0x6cc <__stop_program>
